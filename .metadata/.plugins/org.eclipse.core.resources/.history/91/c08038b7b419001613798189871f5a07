package com.whp;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Iterator;
import java.util.Set;

public class SelectorServerTest {
	private Selector selector;
	private ServerSocketChannel serverChannel = null;
	private int keys =0;

	/**
	 * 初始化服务端的连接通道和管理器，已经注册事件
	 * @throws IOException
	 */
	public void initServer() throws IOException {
		this.selector = Selector.open();
		serverChannel = ServerSocketChannel.open();
		serverChannel.socket().bind(new InetSocketAddress("127.0.0.1",8888));
		serverChannel.configureBlocking(false);
		//把通道serverChannel注册到通道管理器对象selector，当有客户端连接时触发。
		SelectionKey key = serverChannel.register(this.selector, SelectionKey.OP_ACCEPT);
	}
	public void listen() throws Exception {
		System.out.println("服务器已经启动成功！");
		while(true){
			keys = this.selector.select();
		}
		
		
	}
	public void start() throws IOException{
		SelectorServerTest ns = new SelectorServerTest();
		ns.initServer();//初始化一些配置。
		ns.listen();
	}

	
	
}