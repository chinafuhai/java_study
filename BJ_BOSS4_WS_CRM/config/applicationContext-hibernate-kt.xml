<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>WEB-INF/classes/jdbc_kt.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="dataSource" class="com.asiainfo.boss4.dbcp.MyBasicDataSource">
        <property name="driverClassName">
            <value>${datasource.driverClassName}</value>
        </property>
        <property name="url">
            <value>${datasource.url}</value>
        </property>
        <property name="username">
            <value>${datasource.username}</value>
        </property>
        <property name="password">
            <value>${datasource.password}</value>
        </property>
        <property name="initialSize">
            <value>${datasource.initialSize}</value>
        </property>
        <property name="maxActive">
            <value>${datasource.maxActive}</value>
        </property>
        <property name="maxWait">
            <value>${datasource.maxWait}</value>
        </property>
        <property name="maxIdle">
            <value>${datasource.maxIdle}</value>
        </property>
        <property name="minIdle">
            <value>${datasource.minIdle}</value>
        </property>
		<property name="removeAbandoned">
			<value>${datasource.removeAbandoned}</value>
		</property> 
		<property name="removeAbandonedTimeout">
			<value>${datasource.removeAbandonedTimeout}</value>
		</property> 
		<property name="validationQuery">
			<value>${datasource.validationQuery}</value>
		</property> 
		<property name="testOnBorrow">
			<value>${datasource.testOnBorrow}</value>
		</property>
        <property name="testOnReturn">
        	<value>${datasource.testOnReturn}</value>
        </property>
        <property name="testWhileIdle">
        	<value>${datasource.testWhileIdle}</value>
        </property>
    </bean>
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>
        <property name="mappingDirectoryLocations">
			<list>
				<value>WEB-INF/classes/com/asiainfo/openPlatform/domain/</value>
				<value>WEB-INF/classes/com/asiainfo/boss4/domain/</value>
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.asiainfo.boss4.domain.InBusiBatch</value>
				<value>com.asiainfo.boss4.domain.InBusiBatchDetail</value>
			</list>
		</property>
		
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
               	<!-- <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop> -->
            </props>
        </property>
    </bean>
    
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		    <tx:method name="query*" read-only="true"/>
			<tx:method name="*" rollback-for="Throwable"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 开通平台事务配置 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.asiainfo.openPlatform.service.openPlatServiceImpl.*(..))" advice-ref="txAdvice"/>
	</aop:config>
</beans>
